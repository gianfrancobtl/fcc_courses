/*
Problem 19: Counting Sundays
You are given the following information, but you may prefer to do some research for yourself.

1 Jan 1900 was a Monday.
Thirty days has September,
April, June and November.
All the rest have thirty-one,
Saving February alone,
Which has twenty-eight, rain or shine.
And on leap years, twenty-nine.
A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.
How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?
*/
let daysPerMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

function countingSundays(firstYear, lastYear) {

  // What day is it? If day = 
  let day = (365 * firstYear + Math.floor((firstYear - 1900) / 4) - 1) % 7;

  let count = 0;
  for (let year = firstYear; year <= lastYear; year ++){
    for (let month = 0; month < daysPerMonth.length; month ++){
        if (day % 7 == 1){
          count ++;
        }
        day += daysPerMonth[month];
        if (year % 4 == 0 && month == 1){
          day ++
        }
    }
  }

  return count;
}

console.log(countingSundays(1943, 1946));