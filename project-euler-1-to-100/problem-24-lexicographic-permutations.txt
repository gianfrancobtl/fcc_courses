/* 
Problem 24: Lexicographic permutations
A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:

012   021   102   120   201   210
What is the nth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9? 
*/

const DIGITS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

function factorial(n) {
  if (n === 0 || n === 1) {
    return 1;
  } else {
    return n * factorial(n - 1);
  }
}

function lexicographicPermutations(n) {
  let nThLexicographicPermutation = '';
  let digits = DIGITS.slice();
  let remainder = n;
  
  while(digits.length > 2){
    let factorialValue = factorial(digits.length - 1);
    let arrayPosition = Math.floor(remainder/factorialValue);
    nThLexicographicPermutation += digits[arrayPosition];
    digits.splice(arrayPosition, 1);
    remainder %= factorialValue;
  }

  if (remainder == 0){
      nThLexicographicPermutation += digits[0] + digits[1];
  }

  if (remainder == 1){
     nThLexicographicPermutation += + digits[1] + digits[0];
  }

  return parseInt(nThLexicographicPermutation);
}


lexicographicPermutations(699999);